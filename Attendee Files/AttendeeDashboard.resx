<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="profilePicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFMAAABHCAYAAAB79XuNAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAx9JREFUeF7tmw2RwjAQRqsEBShAAQpQgAIUgAEwAAbAAChAAQpQgILevM6Eg4VS
        2m42AfabeTM3XK807/LXNC1Kj1oK+YGne7KSeblcyu12W87n83I8HpfD4bAcDAYV/DyZTMrZbFYeDofq
        2NyShUzErFarO3lNcCxiz+ezPF2yJJe52WxaSZTwt/wjckgymdRGmq2U05XpdJq86SeRSaHpE6WQvnDO
        lEKTyIwhMkBtTxVzmfRvUoA2y+VSfq1JTGUy8sqCxyLFKG8qk6mMLHQsUjR3M5mWtTJgPRiZyeTORhY2
        Nuv1Wl5G1JjJZB4oCxsbvtMyZjJjTofqGI1G8jKixkymLKgVlnGZinGZijGTSf8lCxob+mnLmMn00Vwx
        zPlkYWOz2+3kZUSNmUzuRmRhY2N9f24mk2guBjfBOoB1TGVa3p9b10piKpOw1igLrs1PrGeGxGzu1tOh
        2ySR6c+AlEOhNeee1PaUIkkymSH0b32fm1uvW9YluUzCyMtUpo1UjuUfkbo23iYLmSGI2e/3lViardxr
        RJ/IPiRW7XOSGJKVzE+Py1SMy1SMy1RMUpkMIqfT6brBNQw8LCTXLSbzOQMRxzFPZURn8+vxeJSnN4+p
        TORR8LAzWIrSIIz4KXYXR5dJgZhUx7wffwXfyyKxxSpSNJk0u1QC66BboMbGiqrMUAvr+rtc4PpiPNJQ
        k8kgkrtEibbU3jJpzrEGEyuQyqyibzrLpEkvFouHC/tk+r4K00kmtfHTmvS79KmlrWXy3o68gG+ky7tF
        rWRabqPOAbqxNnlLZqxnNp9Am+dKjTJ/WWTgXaEvZbrIf94R+lLmr/WRTTRtuamVafEm2SfyapR/KpPF
        AHkS55+6tdMHmdwBfOuEXAv8POs/H2R6P/kez+agdzItt/x9A7K538nMbTE3d+TLrleZWJYHO83c1s6r
        TM0dab/Ebe2sZHpf2Y8wslcyU7xW8k2Ebd+VTL//7kdo6oU3cR1o6oXfOurA09mCrSTyF0578Fj4RF0H
        ppaFDz46sPhRtNmU79SDx0J+6HTHZSriMhXxPlMJPP4BMFQMr6NU00wAAAAASUVORK5CYII=
</value>
  </data>
</root>